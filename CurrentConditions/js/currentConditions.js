  $(function() {
    var	contWidth = window.innerWidth, contHeight = window.innerHeight,
      cont = Raphael('mainContainer');

    function setBackground() {
      //import paths created in Inkscape
      var	statesPath = 'm 63.53252,108.77715 1.50525,-12.15108 3.841463,-13.829656 8.510865,-7.886392 7.510973,-11.152945 10.180443,-11.74261 1.507192,-18.35142 -4.084418,-9.463088 0.670468,-10.222921 5.34387,-16.6803094 2.092184,-21.8711816 4.26987,-50.445512 3.93565,-48.434205 3.0544,-36.95327 9.04761,4.34694 4.00284,3.7656 3.67042,-0.42341 7.50899,-4.95263 9.59578,-3.57349 15.85019,2.11641 69.23422,4.27297 19.35219,1.14956 -0.0844,3.60301 -3.10084,46.50609 -1.59846,43.655422 -4.11054,74.241141 -1.42363,17.848555 -2.67143,6.790067 3.75209,5.274096 -0.002,6.200272 -9.51092,4.619903 -12.93064,3.534753 -8.67517,-0.408389 -3.84146,13.829669 -16.51944,9.655648 -10.8471,9.564997 -0.16889,7.205928 -3.58879,6.120878 -14.51369,-2.41225 -2.6676,-5.610539 -3.92115,1.93191 -9.84422,3.531039 -1.25455,10.64257 -6.75687,0.42726 -1.91734,-3.93569 -5.1699,-6.02647 -9.76071,3.02821 -7.1766,9.14155 -5.08735,-3.42914 -3.50137,-6.78253 -11.261142,-0.32152 -18.518395,0.0225 -9.927775,4.03383 z m 407.64004,-274.19765 -24.18028,9.29962 -13.18128,5.04326 -12.43214,9.81823 -14.51745,9.98839 -10.42731,0.85054 -9.25922,0.0111 -18.35314,5.21714 -6.58976,-0.57853 -8.92204,-11.30053 -16.34935,-0.65045 -7.25541,-5.85633 -6.67296,-5.42679 -15.51022,-0.32954 -32.36536,-0.21211 -24.64957,-0.22141 -3.55946,46.1715 -1.59847,43.655431 -4.11053,74.241134 -1.21516,18.141598 12.88732,1.36683 7.92502,-1.266427 8.17279,6.52555 2.74827,14.408187 17.84986,4.000156 4.58584,6.446144 6.42253,1.584183 8.25928,-3.277767 9.25828,3.088941 3.25164,5.190891 9.84514,-6.631173 6.17375,-3.107678 5.00475,0.83182 0.58116,8.880844 5.0038,3.931965 9.54828,9.079367 6.79816,0.871643 6.42354,-1.515954 1.92116,-8.46494 5.75697,-3.693676 3.09113,-15.504477 5.00866,-11.568843 4.33805,-1.345873 3.4187,4.185265 0.58217,5.780659 6.00663,-2.101992 2.33715,-4.778759 -2.58403,-6.113364 1.25365,-7.542441 3.67135,-3.523547 8.76162,-9.394857 4.7559,-3.860012 6.25548,2.589818 7.84235,-3.863765 11.26395,-8.9789558 9.01233,-10.9033788 3.92609,-17.4326434 4.09212,-15.338142 2.4236,-14.582074 -1.91538,-10.135979 3.75494,-4.026415 4.63111,-1.55611 -0.19685,-34.395133 1.00085,-61.72005 z m -83.14993,315.51959 -11.27725,8.15197 -14.85088,8.89959 -16.77113,14.26428 -6.42438,4.6161 -1.0865,6.5368 -13.09781,4.54039 -19.27147,7.64813 -8.81246,3.02909 -163.10602,-11.45072 -49.708016,-2.5778 -14.571443,-0.78306 -11.961387,-2.0765 -2.005762,12.06784 -26.27526,-2.81689 -21.8545573,-1.56546 -32.3975027,-4.72749 3.753786,-3.34878 7.659951,-4.35888 6.9609003,-2.49679 2.36242,-9.83789 3.77663774,-5.2183 -3.66190454,-8.72379 3.4680648,-5.51834 7.925911,-4.36656 6.8404437,-0.92998 7.839423,5.43669 10.341811,5.85262 3.670444,-0.42342 1.670493,-6.95636 -2.750148,-8.20793 2.17093,-6.87324 6.757805,-3.52728 8.341852,-0.68045 5.339001,-1.1795 -1.583025,-5.94703 -0.99901,-6.36667 3.92115,-1.93187 4.966285,-9.76737 10.136241,-3.74079 18.518439,-0.0225 11.261097,0.32151 3.50138,6.78253 5.08733,3.42914 7.17661,-9.14155 9.76071,-3.02819 5.1699,6.02646 1.91734,3.93569 6.75687,-0.42726 1.25456,-10.64258 9.84424,-3.531033 3.92113,-1.931907 2.66761,5.61054 14.5137,2.41224 3.58879,-6.120852 0.16889,-7.205946 10.84707,-9.564996 16.51944,-9.655647 3.84145,-13.829662 8.67519,0.408379 12.9306,-3.534752 9.51094,-4.619904 0.002,-6.200301 -3.75209,-5.274065 2.87989,-6.497033 12.88743,1.36684 7.92491,-1.266428 8.17279,6.525551 2.74827,14.408178 17.84986,4.000155 4.58586,6.446143 6.4225,1.584164 8.25928,-3.277746 9.25829,3.088939 3.25163,5.190901 9.84524,-6.631213 6.17365,-3.107637 5.00475,0.831809 0.58117,8.880854 5.0038,3.931956 9.92392,8.366756 -2.34097,17.179371 1.66662,5.444166 7.25541,5.85636 0.83188,7.37235 7.08629,13.06231 6.58686,9.87904 9.01973,8.52453 z m 0.738,-2.25226 4.16697,12.06039 3.33521,4.68809 8.59066,4.01142 8.3419,-0.68047 8.67713,-5.79188 c 0,0 4.753,5.44044 6.8384,5.27034 2.08549,-0.17022 14.01428,-0.77111 14.01428,-0.77111 l 7.92872,-13.66704 7.50611,4.34793 11.26302,-5.87887 4.33711,1.75428 7.50902,-4.95258 1.92115,-8.46492 -1.83376,-4.43852 21.11402,-31.11095 9.93265,-19.534626 3.25743,-13.410062 5.58869,0.412143 3.58405,9.379925 3.58593,3.179581 8.00754,1.330894 6.34472,-16.513906 2.58881,-9.387415 10.67708,0.741156 2.67142,-6.790085 10.76263,-5.961982 2.83762,-4.695546 6.42541,-7.716297 2.58786,-6.287229 3.25837,-16.510181 13.09387,7.860167 15.9287,12.465098 5.13485,-15.423191 11.96766,8.448025 -1.50436,9.050941 16.3475,6.850808 5.33714,5.020763 4.00563,-5.534817 6.17098,6.192811 -6.17573,9.307929 -2.42175,8.381751 -6.84233,7.130256 -1.0864,6.536795 1.08256,5.863827 14.97622,6.822352 5.03544,5.806848 15.84793,3.667427 6.83757,8.37049 9.67519,3.67494 3.33512,4.68807 -3.84138,13.82965 2.50127,3.51608 -0.6695,7.12275 2.91738,7.20224 -1.41974,5.44792 -9.42451,-5.18339 -0.5014,3.01696 5.16991,6.02646 -0.58499,3.51977 3.91918,4.26842 3.16807,5.69373 -0.66948,7.12281 -7.75881,3.36094 0.75027,1.67486 8.25825,-0.17771 10.34373,-0.34783 3.58686,0.0793 8.98475,23.95386 -15.99563,2.78166 -37.03787,3.14509 -61.31138,2.03377 -65.73261,1.13615 -54.38727,-0.77192 -49.97787,-2.10593 -22.76055,0.35094 -13.64815,-4.24399 -6.5369,-1.17792 -8.50998,4.78628 -24.60675,-3.57303 -38.11795,-0.26018 -31.43594,-2.24443 9.24563,-2.86842 19.27148,-7.64812 13.0978,-4.5404 1.08641,-6.53679 6.42447,-4.61611 16.77112,-14.26429 14.85091,-8.89958 12.01522,-10.40423 z M 524.9701,-6.018489 l 0.88642,15.9516342 0.0779,18.0980588 1.16802,-0.8393 7.75982,-6.461055 8.59448,-8.389251 7.59063,0.744882 5.25637,-3.7768084 6.84243,-7.1302557 3.66938,2.6767547 9.17565,0.4915813 9.09403,-5.20587385 6.9642,-3.48760115 5.96331,-0.5590529 4.50647,4.36069492 8.25628,6.02268188 5.08635,6.5292742 3.58551,4.729648 -5.84386,15.047052 -15.9287,-12.465098 -13.09387,-7.860166 -3.25837,16.51018 -2.58785,6.287229 -6.42542,7.716287 -2.83762,4.695556 -10.76263,5.961981 -2.67142,6.790087 -10.67708,-0.741156 -2.58881,9.387415 -6.34472,16.513904 -8.00754,-1.330892 -3.58593,-3.179593 -3.58405,-9.379914 -5.5887,-0.412142 -3.25742,13.410051 -9.93265,19.534636 -21.11402,31.11093 1.83375,4.43854 -1.92114,8.46492 -7.50902,4.95257 -4.33711,-1.75427 -11.26302,5.87887 -7.50611,-4.34793 -7.92872,13.66703 c 0,0 -11.92879,0.60103 -14.01428,0.77111 -2.0854,0.17025 -6.83841,-5.27034 -6.83841,-5.27034 l -8.67711,5.7919 -8.34191,0.68046 -8.59066,-4.01142 -3.33521,-4.68809 -5.22372,-10.53181 -8.70099,-7.80083 -6.58686,-9.87904 -7.0863,-13.06233 -0.83187,-7.37233 -7.25541,-5.85637 -1.66671,-5.444172 1.96541,-16.466742 6.79817,0.871643 6.42354,-1.515963 1.92127,-8.464941 5.75686,-3.693667 3.09114,-15.504476 5.00866,-11.568853 4.33803,-1.345864 3.4187,4.185267 0.58217,5.780656 6.00664,-2.101991 2.33715,-4.778758 -2.58403,-6.113364 1.25365,-7.542441 3.67135,-3.523549 8.76163,-9.394865 4.75599,-3.860012 6.25538,2.58983 7.84236,-3.863767 11.26394,-8.9789563 9.01233,-10.9033788 3.92609,-17.4326439 4.09212,-15.338143 2.42361,-14.582072 -1.91549,-10.13599 3.75504,-4.026414 4.64201,-3.362239 0.55835,63.4665986 14.72512,0.046592 39.30708,1.579873 z M 763.15169,73.66079 743.47183,74.520274 727.87358,72.444501 726.12815,52.002325 724.63643,20.751187 720.55478,1.9876515 718.84,-12.355803 l -26.53512,0.775333 -47.51351,1.127204 -119.8463,4.2160161 0.91145,16.1703951 0.0779,18.0980588 1.16802,-0.8393 7.75982,-6.461055 8.59448,-8.389251 7.59063,0.744882 5.25637,-3.7768084 6.84243,-7.1302557 3.66938,2.6767547 9.17565,0.4915813 9.09403,-5.20587385 6.9642,-3.48760115 5.96331,-0.5590529 4.50647,4.36069492 8.25628,6.02268188 5.08635,6.5292742 2.95965,5.400765 11.88451,7.400769 -1.50435,9.050941 16.34749,6.850797 5.33714,5.020773 4.00563,-5.534816 6.17098,6.192811 -6.17574,9.30793 -2.42175,8.381739 -6.84233,7.130258 -1.08639,6.536804 1.08256,5.863828 14.97623,6.822351 13.37818,2.026572 9.00757,4.597412 6.33894,2.086991 4.08931,-6.037684 -3.41785,-7.285413 0.91937,-5.531099 -6.42066,-7.784484 -3.66462,-18.177506 6.76155,-15.927897 0.58601,-6.619939 -3.33522,-4.688095 c 0,0 5.34006,-4.279616 5.67435,-6.290925 0.33427,-2.011339 2.58783,-6.28726 2.58783,-6.28726 l 6.67427,-3.024434 6.84139,-4.0301403 0.99993,3.2665513 -5.33994,4.279643 -5.92595,10.899574 0.41587,3.686195 5.33808,1.920617 -1.34,17.345718 -7.00761,1.935637 -0.83765,11.228557 1.58502,-0.253342 4.50611,-5.451606 4.08546,6.362902 -5.67328,3.190799 -2.75603,10.393021 6.25258,11.890315 11.76051,3.50483 5.42258,-1.682358 7.33513,17.754143 5.25443,2.42345 -1.83853,11.06223 -9.51385,13.92032 -5.09493,21.37209 2.74918,11.30802 4.4207,1.25147 8.17849,-12.07536 4.34095,-10.64635 4.17773,-22.04127 12.01607,-13.50439 10.09976,-20.540276 2.92504,-17.599006 z m -55.84392,21.974824 2.20798,8.376146 -0.41888,5.61433 2.54223,6.36479 c 0,0 3.21223,-2.30805 3.37938,-3.31371 0.16713,-1.00565 -0.6642,-9.92808 -0.6642,-9.92808 l -1.04038,-7.665415 -6.00613,0.551939 z M 296.567,207.44806 133.32473,196.33472 l -49.708016,-2.5778 -14.571443,-0.78306 -11.961387,-2.0765 -2.005762,12.06784 -26.27526,-2.81689 -21.8545573,-1.56546 -34.3786177,-5.5448 -3.836303,18.01428 -9.863592,18.4193 -4.639749,8.86898 -6.440276,12.93281 -2.338106,7.87891 -13.681836,4.96007 2.665655,11.81088 -5.259312,13.07732 -5.631871,4.48923 25.31552,3.94934 75.573225,6.35998 16.599261,2.24221 25.274221,2.65049 87.418346,6.26185 31.90468,2.71911 26.56886,1.31561 26.60957,0.80558 15.43209,-0.0188 3.50804,-14.91853 6.25735,-3.61045 8.84238,-0.59723 3.92403,-11.23236 14.43296,-6.38537 12.76352,-2.52917 14.85089,-8.89952 14.59916,-4.29088 3.58974,-9.22103 14.01706,-10.07153 2.08552,-0.17023 c 0,0 -0.58499,3.51982 1.91734,3.93569 2.50241,0.4159 5.83856,2.00387 5.83856,2.00387 l 8.84519,-9.89775 6.84045,-0.93 6.83943,2.17024 6.84336,-10.23044 10.34562,-6.54801 2.58785,-6.28723 2.57876,-12.1397 -7.07919,-1.00946 -8.50987,4.78629 -24.60676,-3.57302 -38.11795,-0.26028 -30.8665,-2.42113 z m 429.55608,0.57247 2.86475,15.49436 7.66747,21.94312 6.25351,8.79012 0.83186,7.37233 -7.59064,-0.74489 2.16805,2.42721 -3.17388,12.90717 -8.67608,2.69176 -3.08833,6.20402 -5.50802,8.38547 -12.34662,3.11512 -7.3399,-2.25337 -4.42069,-1.25142 -4.33608,-4.85443 0.33232,4.18899 -0.50143,3.01696 6.00561,0.99814 1.83376,4.43854 -9.26501,18.61215 13.01228,2.1627 1.16623,5.36099 8.17654,-5.87504 4.25449,-0.84307 -7.84424,10.06404 -12.01607,13.5044 -4.00385,-0.66543 -3.25249,-2.09073 -8.84238,0.59723 -17.26862,4.88063 -22.77683,13.26611 -12.93345,12.83525 -9.34859,19.11498 -2.75499,7.29285 -14.76432,-0.90375 -19.39808,3.87348 -26.55186,-30.63087 -35.10885,-30.12112 -8.59065,-4.01142 -39.78894,-1.96264 -13.76347,-0.73739 -3.33334,-10.8884 -6.00374,-7.19847 -51.2988,-6.97599 -22.93911,-1.22902 -30.36652,9.42113 -20.35509,4.88439 -5.17186,0.17387 -18.51843,0.0225 -21.93813,-1.06266 -21.27061,-1.98507 3.50815,-14.91855 6.25735,-3.61046 8.84238,-0.59722 3.92403,-11.23236 14.43296,-6.38537 12.76351,-2.52919 14.8509,-8.89949 14.59916,-4.29089 3.58974,-9.22105 14.01706,-10.07151 2.08552,-0.17023 c 0,0 -0.58509,3.51982 1.91734,3.93568 2.50231,0.41592 5.83856,2.00387 5.83856,2.00387 l 8.84519,-9.89773 6.84035,-0.93001 6.83953,2.17025 6.84336,-10.23046 10.34562,-6.548 2.58786,-6.28722 2.04754,-12.31932 13.63709,4.59183 22.76063,-0.35093 49.97789,2.10594 54.38726,0.77192 65.7326,-1.13616 61.31138,-2.03377 37.03788,-3.1451 16.06217,-2.52888 z m -4.99396,104.60955 9.30296,-6.46293 11.09638,-6.42329 5.08881,-1.22111 1.54511,-6.20218 1.1739,-19.44026 -3.29249,-8.03965 -1.04079,-6.11526 2.37746,-0.37997 5.66657,18.51029 -1.04698,14.03583 -2.25556,10.47625 -11.30385,3.03006 -10.01185,6.08677 -4.13015,3.18899 -3.16952,-1.04354 z M -0.19460427,625.24031 2.6597719,577.14185 l 1.1863945,-59.74223 7.7713276,-43.66294 18.54829,-96.12726 8.1075,-51.87461 3.829515,-19.8809 24.203725,2.83794 87.418346,6.26185 31.94644,2.46771 -1.58578,6.71214 -0.58597,6.61999 0.24687,10.89214 6.41482,26.38538 2.40917,31.92032 1.32845,19.85612 2.49759,15.9167 0.91061,22.37024 3.24679,20.69172 6.25255,11.89031 -0.25363,10.80895 5.58779,3.51229 -0.58596,6.61999 -8.01238,14.16988 -3.17286,9.80704 -1.50337,5.95075 2.74832,14.40823 -1.75699,16.75971 -3.75593,7.12654 1.584,2.84683 4.08641,3.2628 0.66378,11.47816 -19.51843,-3.24406 -21.35416,-1.4823 -80.578852,-4.09168 -32.198342,-1.21776 -2.588825,9.38743 4.585897,6.44611 7.004693,7.36482 -2.304101,24.9812 -21.648966,4.62566 -8.340859,-2.41972 9.510888,-4.61984 0.501449,-3.01703 -6.416761,-20.18507 -6.672331,-3.17583 -6.760683,12.82773 -5.424537,7.88266 -1.9182658,-0.83558 -8.50802867,-1.41407 z M 254.24006,319.77529 l -15.43207,0.0188 -26.60958,-0.80557 -26.98463,-1.64304 -1.12825,6.78817 -0.58597,6.61999 0.24687,10.89213 6.41483,26.38538 2.40916,31.92033 1.32846,19.85611 2.49758,15.91671 0.91061,22.37024 3.24679,20.69171 6.25255,11.89031 -0.25362,10.80895 5.58778,3.5123 -0.58596,6.62001 -8.01237,14.16985 -3.17287,9.80704 -1.50338,5.95075 2.74833,14.40824 -1.75698,16.75972 -3.75594,7.12653 1.58399,2.84683 4.08642,3.2628 0.24687,10.89208 6.00182,13.39882 3.75211,5.2741 24.43956,4.57871 33.83027,3.55586 67.26702,7.04636 17.20756,0.70445 14.15598,2.44164 -1.00386,9.13407 7.58968,3.845 3.25735,-13.40998 -2.6646,-14.91103 4.33898,-4.44601 17.59915,5.50867 15.24483,3.54949 0.85574,-19.99078 12.18806,-30.01082 6.67715,-12.32489 -0.16403,-8.29478 16.10536,-19.54211 -1.01755,-5.33707 -6.15124,2.0772 -7.33889,-5.35357 -0.91542,-6.86948 -2.16527,-11.72766 -5.92015,-7.70135 -7.67325,-3.3422 -2.49755,-15.91666 -5.41586,-20.01874 -12.00934,-8.19666 -5.50335,-7.11534 -2.66657,-8.71067 -5.50324,-7.11536 -6.33802,-5.18713 -5.5023,-10.21544 -8.33904,-8.62002 -13.09388,-7.86018 -0.74931,-4.77505 -6.0027,-10.29862 -0.74934,-4.77504 -7.83553,-17.83731 -10.59341,-1.24395 -11.25826,-9.62202 -3.33521,-4.688 -0.0832,-5.69745 3.50526,-5.61806 7.50799,-1.85247 0.67977,-7.18387 -5.76611,0.65454 -18.51843,0.0225 -21.93813,-1.06266 -21.27052,-1.98508 z m 193.2904,207.81186 -6.00263,2.10116 -7.33899,-5.35358 -0.91543,-6.86946 -2.16514,-11.72767 -5.92017,-7.70137 -7.67326,-3.34219 -2.49756,-15.91666 -5.41585,-20.01874 -12.00935,-8.19666 -5.50334,-7.11531 -2.66655,-8.71069 -5.50327,-7.11535 -6.33811,-5.18715 -5.5022,-10.21542 -8.33902,-8.62004 -13.09399,-7.8602 -0.74922,-4.77502 -6.0028,-10.29862 -0.74924,-4.77504 -7.83552,-17.83731 -10.59352,-1.24396 -11.25826,-9.62199 -3.33511,-4.68803 -0.0832,-5.69747 3.50524,-5.61804 7.50799,-1.85248 0.0853,-6.70312 20.35518,-4.88439 30.36643,-9.42112 22.93911,1.22902 51.29891,6.97598 6.00374,7.19848 3.33323,10.8884 13.76348,0.73739 39.78903,1.96264 8.59055,4.01141 35.10895,30.12113 27.09413,30.46261 -19.60471,14.18822 -11.18327,17.77661 -4.76076,19.36076 -5.42259,1.6823 -4.92406,7.96582 -7.84132,0.76362 -8.34471,9.98087 -9.92881,7.13402 -8.76162,9.39489 -5.42247,1.68233 -12.76539,8.72941 -9.09209,-0.99446 1.33133,10.55564 -18.35605,14.51758 -7.17474,2.94128 z',
        warmFrontPath = 'm 574.96518,84.459714 c 30.75102,39.915536 39.05527,16.411786 73.90001,98.260246 31.13596,52.35415 26.9392,51.74036 73.61521,64.65383 39.38564,0.44759 76.94462,-0.65868 102.40309,17.94459 8.15916,-15.05968 -7.11803,-24.03409 -17.00682,-9.69979 l -9.46431,-2.38066 c 6.73301,-13.67632 -10.35172,-23.32778 -18.39135,-4.03487 l -8.99543,-0.48097 c 2.41246,-16.30753 -21.10321,-19.21931 -19.55252,-0.87941 l -10.43833,-0.60975 c 5.35883,-14.32456 -17.8367,-22.99464 -20.5728,-0.94985 l -9.34761,-1.63004 c 6.16182,-9.33426 -9.35046,-28.85124 -19.3533,-7.30704 l -10.7905,-7.43582 c 13.42002,-1.67466 9.97135,-27.90668 -12.23341,-14.89581 l -6.48597,-9.48848 c 15.35869,-3.79318 10.10923,-25.74371 -9.64142,-16.74924 l -6.14588,-11.25939 c 15.59074,-1.95849 12.69986,-29.00067 -7.64714,-16.46749 l -4.63254,-10.57919 c 15.67701,-2.83744 5.72934,-28.72575 -11.96374,-18.52016 l -6.74355,-9.14838 c 13.05719,-2.89877 4.80708,-27.677623 -13.80509,-13.12489 l -12.09253,-9.20673 C 601.7234,77.514105 580.90879,79.473338 574.96518,84.459714 z',
        coldFrontPath = 'M 310.64508,488.46939 C 383.62005,361.72457 461.81536,239.62006 494.56289,77.117511 l 15.5055,14.997904 c -10.6738,0.82081 -20.04202,11.157395 -20.04202,11.157395 l -4.22553,14.68015 c -0.62301,0.52637 -0.21777,-0.0943 16.81826,16.55161 -13.13698,-2.27766 -22.90652,4.58413 -22.90652,4.58413 l -4.70581,15.02023 c 0,0 -1.6321,11.50277 14.97299,21.29447 -5.27812,0.0578 -20.151,-4.3742 -22.42418,2.02333 l -4.1134,11.57658 c 4.26679,13.29253 12.5884,20.98403 12.75374,21.014 -13.95575,-0.21482 -20.03237,-1.67951 -25.08207,11.16658 l -2.14062,7.80183 c 0,0 6.13597,12.93245 12.06535,20.05943 -11.56771,-0.98447 -12.35481,-4.73509 -22.54918,2.52049 l -5.76734,12.77624 c 4.93743,7.36451 2.89563,6.67895 14.333,18.74337 -19.22783,-3.22693 -16.52609,-2.20583 -23.86491,2.10276 l -3.52542,7.65209 c -0.26904,9.08549 4.15665,13.63872 11.06931,21.28786 -20.34262,-0.20366 -18.06928,-6.0475 -23.64501,2.48103 l -4.60686,9.07357 c 0.9476,5.75497 -3.2375,2.70697 12.44521,17.84678 0,0 -13.5522,-2.00261 -23.7509,4.423 l -3.81428,5.94735 c 0,0 0.0559,10.19021 7.95174,20.1059 0,0 -9.6411,-2.27548 -20.58859,3.22466 l -3.62508,6.46894 c 0,0 -2.97139,10.94048 8.88893,24.16676 0,0 -13.09927,-8.36367 -21.24993,-2.7261 l -4.57058,8.41223 c 0,0 0.98365,9.12217 11.23375,19.39589 -13.57746,-5.56459 -19.28759,-4.0792 -19.28759,-4.0792 l -5.41154,7.69442 c 0.0183,-0.23843 -1.22494,3.72799 11.8284,16.52463 -15.39957,-1.64005 -12.94341,-0.60415 -20.77423,-0.56226 l -5.05942,8.24057 c 0,0 -5.29021,5.70924 9.1982,20.1321 -19.29848,-2.32236 -23.60906,5.10804 -23.60906,5.10804 z',

        states = cont.path(statesPath),
        warmFront = cont.path(warmFrontPath),
        coldFront = cont.path(coldFrontPath),
        title1 = cont.text(195,74,'CURRENT'),
        title2 = cont.text(195,114,'CONDITIONS'),
        title = cont.set().push(title1, title2),
        instructionBox = cont.rect(748, 376, 294, 148, 10)
        instructionText = cont.text(765, 397, 'This map shows the current weather\nconditions and temperature for several\nlocations throughout the southeastern\nUnited States as a warm front and cold\nfront move through. Use what you have\nlearned to complete the map. Click on\na question mark to begin.')
        bounding = cont.rect(184,47,889,500),

        //array of city name, x pos, and y pos
        cityInfo = [['Asheville',351, 268, 67], ['Atlanta', 247, 374, [45,69,82,'Atlanta']], ['Cape Hatteras', 753, 288, 74],
              ['Charleston', 533, 471, 80], ['Charlotte', 441, 296, [78,92,101,'Charlotte']], ['Charlottesville', 514, 113, 73],
              ['Columbia', 439, 387, 82], ['Fayetteville', 581, 318, 77], ['Raleigh', 548, 242, [50,66,75,'Raleigh']],
              ['Richmond', 632, 98, [43,64,76,'Richmond']], ['Virginia Beach', 726, 178, 66], ['Wilmington', 616, 406, [79,95,99,'Wilmington']]],
        cities = cont.set(),
        weather = cont.set(),
        temp = cont.set();

      //add city name and position
      for (i = 0; i < cityInfo.length; i++) {
        cities.push(cont.text(cityInfo[i][1],cityInfo[i][2],cityInfo[i][0]));
      }

      cities.attr({'font': "12px Comic Sans MS", 'font-weight': 'bold', 'text-anchor': 'start', 'cursor': 'default'});

      //add question mark for position where temp and weather will be
      for (i = 0; i < cityInfo.length; i++) {
        if (cityInfo[i][0] == 'Atlanta' || cityInfo[i][0] == 'Charleston') {
          cont.image('css/images/sunny.png',cities[i].getBBox().x,cities[i].getBBox().y2,28.825,32.926)
        } else if (cityInfo[i][0] == 'Columbia') {
          cont.image('css/images/storm.png',cities[i].getBBox().x,cities[i].getBBox().y2,29.368,36.865)
        } else if (cityInfo[i][0] == 'Raleigh' || cityInfo[i][0] == 'Cape Hatteras') {
          cont.image('css/images/cloudy.png',cities[i].getBBox().x,cities[i].getBBox().y2,29.106,30.008)
        }else weather.push(cont.text(cities[i].getBBox().x,cities[i].getBBox().y2+10,'?').data('city', cityInfo[i][0]));

        if (typeof cityInfo[i][3] == 'number') {
          cont.text(cities[i].getBBox().x+50,cities[i].getBBox().y2+10,cityInfo[i][3]).attr({'font': "12px Comic Sans MS", 'font-weight': 'bold', 'text-anchor': 'middle', 'cursor': 'default'})
        } else temp.push(cont.text(cities[i].getBBox().x+50,cities[i].getBBox().y2+10,'?').data('temp', cityInfo[i][3]));
      }

      weather.attr({'font': "12px Comic Sans MS", 'font-weight': 'bold', 'text-anchor': 'start', 'cursor': 'pointer'});
      temp.attr({
        'font': "bold 12px Comic Sans MS",
        'text-anchor': 'middle',
        'cursor': 'pointer',
      });

      weather.click(function() {
        selectWeather(this, weather);
      });

      temp.click(function() {
        selectTemp(this, temp);
      });

      states.attr({'fill': '#fff', 'stroke': '#999','stroke-width': 3});
      warmFront.attr({'fill': '#c83737', 'stroke-width': 4});
      coldFront.attr({'fill': '#3771c8', 'stroke-width': 4});
      title.attr({'font': "38px Comic Sans MS", 'font-weight': 'bold', 'stroke': '#fff', 'stroke-width': 3, 'text-anchor': 'start', 'cursor': 'default'});
      instructionBox.attr({
        'fill': '#fff',
        'stroke': '#000',
        'stroke-width': 3,
        'text-anchor': 'start'
      });
      instructionText.attr({
        'font': "bold 14px Arial",
        'text-anchor': 'start',
        'cursor': 'default'
      });
      instructionText.node.childNodes[0].setAttribute('dy', 0);
      for (i=1; i<7; i++) {
        instructionText.node.childNodes[i].setAttribute('dy', 18);
      }

      //bounding box for window (set in Inkscape)
      bounding.attr({'fill': '#5599ff', 'stroke': 'none'}).toBack();
      cont.setViewBox(bounding.getBBox().x,bounding.getBBox().y,bounding.getBBox().width,bounding.getBBox().height);
    }

    //add weather selection pop up with weather choices, run when weather question is clicked
    function selectWeather(weatherButton, weatherSet) {
      var weatherPopUp = cont.rect(weatherButton.getBBox().x, weatherButton.getBBox().y2+5,200,90,5,5),
        weatherTitle = cont.text(weatherPopUp.getBBox().x+weatherPopUp.getBBox().width/2, weatherPopUp.getBBox().y+20,'What are the current weather\nconditions in ' + weatherButton.data().city +'?'),
        choice1 = cont.image('css/images/sunny.png', weatherPopUp.getBBox().x+weatherPopUp.getBBox().width/8-15, weatherPopUp.getBBox().y2-weatherPopUp.getBBox().height/2,28.825,32.926),
        choice2 = cont.image('css/images/cloudy.png', weatherPopUp.getBBox().x+weatherPopUp.getBBox().width*3/8-15, weatherPopUp.getBBox().y2-weatherPopUp.getBBox().height/2,29.106,30.008),
        choice3 = cont.image('css/images/rain.png', weatherPopUp.getBBox().x+weatherPopUp.getBBox().width*5/8-15, weatherPopUp.getBBox().y2-weatherPopUp.getBBox().height/2,28.251,31.355),
        choice4 = cont.image('css/images/storm.png', weatherPopUp.getBBox().x+weatherPopUp.getBBox().width*7/8-15, weatherPopUp.getBBox().y2-weatherPopUp.getBBox().height/2,29.368,36.865),
        choices = cont.set().push(choice1, choice2, choice3, choice4);

      weatherPopUp.attr({'fill': '#fff', 'opacity': 0.8, 'stroke-width': 5});
      weatherTitle.attr({'font': "11px Comic Sans MS", 'font-weight': 'bold'});

      choices.attr({'cursor': 'pointer'});

      choices.click(function (e) {
        weatherSelection(this, weatherButton, weatherSet);
        weatherTitle.remove();
        weatherPopUp.remove();
        choices.remove();
        $('#mainContainer').unbind('mousedown');
      });

      $('#mainContainer').on('mousedown',checkClick);

      function checkClick(e) {
        var elementX = e.target.getBBox().x, elementY = e.target.getBBox().y, elementX2 = elementX+e.target.getBBox().width, elementY2 = elementY + e.target.getBBox().height;
        console.log(elementX, elementY, elementX2, elementY2)
        if (elementX < weatherPopUp.getBBox().x || elementX2 > weatherPopUp.getBBox().x+weatherPopUp.getBBox().width || elementY < weatherPopUp.getBBox().y || elementY2 > weatherPopUp.getBBox().y+weatherPopUp.getBBox().height) {
          weatherTitle.remove();
          weatherPopUp.remove();
          choices.remove();
          $('#mainContainer').unbind('mousedown');
        }
      }
    }

    //set new weather image at a location, run when pop up choice is clicked
    function weatherSelection(popupButton, weatherButton, weatherSet) {
    var xPos = weatherButton.getBBox().x, yPos = weatherButton.getBBox().y, cityData = weatherButton.data().city;
    for (i = 0; i < weatherSet.length; i++) {
        if (weatherSet[0].id == weatherButton.id) break;
      }
      weatherButton.remove();
      weatherButton = popupButton.clone().attr({'x': xPos, 'y': yPos}).data('city', cityData)
      weatherSet.splice(i,1,weatherButton
        .click(function () {
          selectWeather(this, weatherSet);
        })
      )
    }

    //add temperature selection pop up with temperature choices, run when temperature question is clicked
    function selectTemp(tempButton, tempSet) {
      var tempPopUp = cont.rect(tempButton.getBBox().x, tempButton.getBBox().y2+5,200,90,5,5),
        tempTitle = cont.text(tempPopUp.getBBox().x+tempPopUp.getBBox().width/2, tempPopUp.getBBox().y+20,'What is the current\ntemperature in ' + tempButton.data().temp[3] +'?'),
        choice1 = cont.text(tempPopUp.getBBox().x+tempPopUp.getBBox().width/4, tempPopUp.getBBox().y2-tempPopUp.getBBox().height/2+20,tempButton.data().temp[0]),
        choice2 = cont.text(tempPopUp.getBBox().x+tempPopUp.getBBox().width/2, tempPopUp.getBBox().y2-tempPopUp.getBBox().height/2+20,tempButton.data().temp[1]),
        choice3 = cont.text(tempPopUp.getBBox().x+tempPopUp.getBBox().width*3/4, tempPopUp.getBBox().y2-tempPopUp.getBBox().height/2+20,tempButton.data().temp[2]),
        choices = cont.set().push(choice1, choice2, choice3);

      tempPopUp.attr({'fill': '#fff', 'opacity': 0.8, 'stroke-width': 5});
      tempTitle.attr({'font': "11px Comic Sans MS", 'font-weight': 'bold'});

      choices.attr({'font': "14px Comic Sans MS", 'font-weight': 'bold', 'cursor': 'pointer'});

      choices.click(function() {
        tempButton.attr({'text': this.attrs.text})
        tempTitle.remove();
        tempPopUp.remove();
        choices.remove();
        $('#mainContainer').unbind('mousedown');
      });

      $('#mainContainer').on('mousedown',checkClick);

      function checkClick(e) {
        var elementX = e.target.getBBox().x, elementY = e.target.getBBox().y, elementX2 = elementX+e.target.getBBox().width, elementY2 = elementY + e.target.getBBox().height;
        console.log(elementX, elementY, elementX2, elementY2)
        if (elementX < tempPopUp.getBBox().x || elementX2 > tempPopUp.getBBox().x+tempPopUp.getBBox().width || elementY < tempPopUp.getBBox().y || elementY2 > tempPopUp.getBBox().y+tempPopUp.getBBox().height) {
          tempTitle.remove();
          tempPopUp.remove();
          choices.remove();
          $('#mainContainer').unbind('mousedown');
        }
      }
    }

    setBackground();

  });

  $('#cont').click(function(e) {
      console.log(e)
    });
